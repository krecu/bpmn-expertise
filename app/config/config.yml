imports:
    - { resource: parameters.yml }
    - { resource: services.yml }

framework:
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: false #only use for public API
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        handler_id: session.handler.native_file
        save_path: %kernel.root_dir%/sessions
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"
    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        auto_mapping: true

nelmio_cors:
    defaults:
        allow_credentials: false
        allow_origin: ['*']
        allow_headers: ['X-Access-Token', 'X-Common-Id', 'X-Expert-Group-Id', 'X-User-Id', 'Keep-Alive', 'User-Agent', 'X-Requested-With', 'If-Modified-Since', 'Cache-Control', 'Content-Type']
        allow_methods: ['POST', 'PATCH', 'PUT', 'GET', 'DELETE']
        expose_headers: []
        max_age: 0
        hosts: []
        origin_regex: false
    paths:
        '^/api/':
            allow_origin: ['*']
            allow_headers: ['X-Access-Token', 'X-Common-Id', 'X-Expert-Group-Id', 'X-User-Id', 'Keep-Alive', 'User-Agent', 'X-Requested-With', 'If-Modified-Since', 'Cache-Control', 'Content-Type']
            allow_methods: ['POST', 'PATCH', 'PUT', 'GET', 'DELETE']
            max_age: 3600

old_sound_rabbit_mq:
    connections:
        default:
            host:     "%rabbit_mq_host%"
            port:     "%rabbit_mq_port%"
            user:     "%rabbit_mq_user%"
            password: "%rabbit_mq_password%"
            vhost:    "%rabbit_mq_vhost%"
            lazy:     false
            connection_timeout: 3
            read_write_timeout: 3

            # requires php-amqplib v2.4.1+ and PHP5.4+
            keepalive: false

            # requires php-amqplib v2.4.1+
            heartbeat: 0
        iszgosbookru:
            host:     "%rabbit_mq_host%"
            port:     "%rabbit_mq_port%"
            user:     "%rabbit_mq_user%"
            password: "%rabbit_mq_password%"
            vhost:    "%rabbit_mq_vhost%"
            lazy:     false
            connection_timeout: 3
            read_write_timeout: 3

            # requires php-amqplib v2.4.1+ and PHP5.4+
            keepalive: false

            # requires php-amqplib v2.4.1+
            heartbeat: 0
        slutskanu:
            host:     "%rabbit_mq_host%"
            port:     "%rabbit_mq_port%"
            user:     "%rabbit_mq_user%"
            password: "%rabbit_mq_password%"
            vhost:    slutskanu
            lazy:     false
            connection_timeout: 3
            read_write_timeout: 3

            # requires php-amqplib v2.4.1+ and PHP5.4+
            keepalive: false

            # requires php-amqplib v2.4.1+
            heartbeat: 0
        skornouhov:
            host:     "%rabbit_mq_host%"
            port:     "%rabbit_mq_port%"
            user:     "%rabbit_mq_user%"
            password: "%rabbit_mq_password%"
            vhost:    skornouhov
            lazy:     false
            connection_timeout: 3
            read_write_timeout: 3

            # requires php-amqplib v2.4.1+ and PHP5.4+
            keepalive: false

            # requires php-amqplib v2.4.1+
            heartbeat: 0
        dbatishev:
            host:     "%rabbit_mq_host%"
            port:     "%rabbit_mq_port%"
            user:     "%rabbit_mq_user%"
            password: "%rabbit_mq_password%"
            vhost:    dbatishev
            lazy:     false
            connection_timeout: 3
            read_write_timeout: 3

            # requires php-amqplib v2.4.1+ and PHP5.4+
            keepalive: false

            # requires php-amqplib v2.4.1+
            heartbeat: 0
        ekretsu:
            host:     "%rabbit_mq_host%"
            port:     "%rabbit_mq_port%"
            user:     "%rabbit_mq_user%"
            password: "%rabbit_mq_password%"
            vhost:    ekretsu
            lazy:     false
    rpc_servers:
        expertise_api:
            connection: iszgosbookru
            callback:   expertise_api.consumer
            serializer: json_encode
            qos_options:
                prefetch_size:  0
                prefetch_count: 1
                global:         false
            queue_options:
                name:        "expertise.api"
                durable:     true
                auto_delete: true

    producers:
        postman_message:
            connection:       iszgosbookru
            exchange_options: {name: 'isz.postman', type: topic}

    rpc_clients:
            bpm:
                connection: iszgosbookru
                unserializer: json_decode
            auth:
                connection: iszgosbookru
                unserializer: json_decode
            schema:
                connection: iszgosbookru
                unserializer: json_decode
            storage_api:
                connection: iszgosbookru
                unserializer: json_decode

jms_serializer:
    metadata:
        auto_detection: true

fos_rest:
    serializer:
        serialize_null: true
    routing_loader:
        default_format: "json"
        include_format: true
    view:
        default_engine: php
        force_redirects:
            html: true
        formats:
            json: true
            xml: true
        templating_formats:
            html: true
        view_response_listener: "force"
        failed_validation: HTTP_BAD_REQUEST
        mime_types:
            xls: 'text/vnd.ms-excel'
    exception:
        codes: ~
        messages: ~
    body_listener:
        array_normalizer:
            service: fos_rest.normalizer.camel_keys
            forms: true
        decoders:
            json: fos_rest.decoder.json
            xml: fos_rest.decoder.xml
#    format_listener:
#        media_type:
#            version_regex:        '/(v|version)=(?P<version>[0-9\.]+)/'
    service:
        router: router
        templating: templating
        serializer: jms_serializer.serializer
        view_handler: fos_rest.view_handler.default
    param_fetcher_listener: "force"
    body_converter:
        enabled: true


nelmio_api_doc: ~

nelmio_cors:
    defaults:
        allow_credentials: false
        allow_origin: []
        allow_headers: []
        allow_methods: []
        expose_headers: []
        max_age: 0
    paths:
        '^/api/':
            allow_origin: ['*']
            allow_headers: ['*']
            allow_methods: ['POST', 'PUT', 'PATCH', 'GET', 'DELETE']
            max_age: 3600

sensio_framework_extra:
    request: { converters: true }
    view:    { annotations: false }
    router:  { annotations: true }
easy_admin:
    entities:
        - ExpertiseBundle\Entity\ExpertiseField
        - ExpertiseBundle\Entity\ExpertiseGroup
        - ExpertiseBundle\Entity\ExpertiseUser
snc_redis:
    clients:
        default:
            type: predis
            alias: default
            dsn: redis://127.0.0.1:6379
